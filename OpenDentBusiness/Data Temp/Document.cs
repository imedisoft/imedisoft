using Imedisoft.Data.Annotations;
using System;
using System.Collections.Generic;
using System.Text;

namespace OpenDentBusiness
{
	[Table("documents")]
	[CrudTable(AuditPerms = CrudAuditPerm.ImageDelete | CrudAuditPerm.ImageEdit, IsLargeTable = true)]
	public class Document : TableBase
	{
		[PrimaryKey]
		public long Id;
		
		public long PatientId;

		public long Category;

		public string Description;

		public string FileName;




		/// <summary>Enum:ImageType Document, Radiograph, Photo, File</summary>
		public ImageType ImgType;

		/// <summary>True if flipped horizontally. A vertical flip would be stored as a horizontal flip plus a 180 rotation.</summary>
		public bool IsFlipped;

		/// <summary>Only allowed 0,90,180, and 270.</summary>
		public int DegreesRotated;




		/// <summary>Incomplete.  An optional list of tooth numbers separated by commas.  The tooth numbers will be in American format and must be processed for display.  When displayed, dashes will be used for sequences of 3 or more tooth numbers.</summary>
		public string ToothNumbers;

		public string Note;

		/// <summary>True if the signature is in Topaz format rather than OD format.</summary>
		public bool SigIsTopaz;

		/// <summary>The encrypted and bound signature in base64 format.  The signature is bound to the byte sequence of the original image.</summary>
		[CrudColumn(SpecialType = CrudSpecialColType.TextIsClob)]
		public string Signature;

		/// <summary>Crop rectangle X in original image pixel coordinates.  May be negative.</summary>
		public int CropX;

		/// <summary>Crop rectangle Y in original image pixel coordinates.  May be negative.</summary>
		public int CropY;

		/// <summary>Crop rectangle Width in original image pixel coordinates.  May be zero if no cropping.  May be greater than original image width.</summary>
		public int CropW;

		/// <summary>Crop rectangle Height in original image pixel coordinates.  May be zero if no cropping.  May be greater than original image height.</summary>
		public int CropH;

		/// <summary>The lower value of the "windowing" (contrast/brightness) for radiographs.  Default is 0.  Max is 255.</summary>
		public int WindowingMin;

		/// <summary>The upper value of the "windowing" (contrast/brightness) for radiographs.  Default is 0(no windowing).  Max is 255.</summary>
		public int WindowingMax;

		/// <summary>FK to mountitem.MountItemNum. If set, then this image will only show on a mount, not in the main tree. If set to 0, then no mount item is associated with this document.</summary>
		public long MountItemNum;



		
		public string Thumbnail;

		[Column("external_guid")]
		public string ExternalGUID;

		[CrudColumn(SpecialType = CrudSpecialColType.EnumAsString)]
		public ExternalSourceType ExternalSource;

		[Column(AutoGenerated = true)]
		public DateTime AddedOnDate;

		[Column(AutoGenerated = true)]
		public DateTime LastModifiedDate;

		public Document Copy()
		{
			return (Document)MemberwiseClone();
		}
	}


	///<summary>Supported sources that help identify what the corresponding ExternalGUID column should be used for.</summary>
	public enum ExternalSourceType
	{
		///<summary>This is a document that is not stored in an external source.  All documents stored by Open Dental will be this type.</summary>
		None,
		///<summary>This document can be found in a corresponding Dropbox account.</summary>
		Dropbox,
		///<summary>This document is saved from a download from XVWeb program link.</summary>
		XVWeb,
	}
}
