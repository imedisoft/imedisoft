using Imedisoft.Data.Annotations;
using Imedisoft.Data.Models;
using System;
using System.ComponentModel;
using System.Drawing;

namespace OpenDentBusiness
{
    [Table("carriers")]
	public class Carrier
	{
		[PrimaryKey]
		public long Id;

		public string Name;
		public string AddressLine1;
		public string AddressLine2;
		public string City;
		public string State;
		public string Zip;
		public string Phone;

		/// <summary>
		///		<para>
		///			e-Claims Electronic Payer ID.
		///		</para>
		///		<para>
		///			Typically 5 characters in USA and 6 in Canada.
		///		</para>
		/// </summary>
		[Column("electronic_id")]
		public string ElectronicId;

		/// <summary>
		/// Enum:NoSendElectType 
		/// 0 - send electronically, 
		/// 1 - don't send electronically, 
		/// 2 - don't send non-primary (secondary,tertiary, etc.) claims electronically.
		/// </summary>
		public NoSendElectType NoSendElect;

		/// <summary>
		/// Canada: True if a CDAnet carrier.  This has significant implications:  
		/// 1. It can be filtered for in the list of carriers.  
		/// 2. An ElectID is required.  
		/// 3. The ElectID can never be used by another carrier.  
		/// 4. If the carrier is attached to any etrans, then the ElectID cannot be changed (and, of course, the carrier cannot be deleted or combined).
		/// </summary>
		[Column("is_cda")]
		public bool IsCDA;

		/// <summary>
		/// The version of CDAnet supported. Either '02' or '04'.
		/// </summary>
		[Column("cdanet_version")]
		public string CDAnetVersion;

		/// <summary>
		///		<para>
		///			<b>Only used in Canada.</b>
		///		</para>
		/// </summary>
		[ForeignKey(typeof(CanadianNetwork), nameof(CanadianNetwork.Id))]
		public long CanadianNetworkId;

		

		/// <summary>
		/// 1=No Encryption, 2=CDAnet standard #1, 3=CDAnet standard #2.  Field A10.
		/// Deprecated for all Canadian carriers.  Will always be 1 (No Encryption).
		/// </summary>
		public byte CanadianEncryptionMethod;

		public CanSupTransTypes CanadianSupportedTypes;



		/// <summary>
		///		<para>
		///			Tax ID Number. Not user editable. No UI for this field.
		///		</para>
		///		<para>
		///			Used in when importing insurance plans from 834s to uniquely identify carriers.
		///		</para>
		/// </summary>
		[Column("tin")]
		public string TIN;

		/// <summary>
		/// Links carriers into groups for queries.
		/// </summary>
		[ForeignKey(typeof(Definition), nameof(Definition.Id))]
		public long CarrierGroupName;

		/// <summary>
		/// Color that the carrier is highlighted within the appointment module appointment and popup bubble.  Black indicates no color.
		/// </summary>
		public Color ApptTextBackColor;

		

		///<summary>Bit flags.  None (0) by default.  Stores trusted user selected X12 transaction types related to this carrier.</summary>
		public TrustedEtransTypes TrustedEtransFlags;



		/// <summary>
		///		<para>
		///			False by default. Determines if the carrier supplied EB08 field of 271 
		///			transactions should be inverted for coinsurance percentages.
		///		</para>
		///		<para>
		///			When true; carriers sent us insurance percentage so we do not need to invert 
		///			it, it is already inverted for us.
		///		</para>
		/// </summary>
		public bool IsCoinsuranceInverted;

		public bool IsHidden;

		[Column(ReadOnly = true)]
		public long AddedByUserId;

		[Column(AutoGenerated = true)]
		public DateTime AddedOnDate;

		[Column(AutoGenerated = true)]
		public DateTime LastModifiedDate;

		public Carrier Copy()
		{
			return (Carrier)MemberwiseClone();
		}
	}



	/// <summary>
	/// Type 23, Predetermination EOB (regular and embedded) are not included because they are not part of the testing scripts.
	/// The three required types are not included: ClaimTransaction_01, ClaimAcknowledgement_11, and ClaimEOB_21.
	/// Can't find specs for PredeterminationEobEmbedded.
	/// </summary>
	[Flags]
	public enum CanSupTransTypes
	{
		None = 0,

		EligibilityTransaction_08 = 1,
		EligibilityResponse_18 = 2,

		CobClaimTransaction_07 = 4,

		/// <summary>
		/// ClaimAck_11 is not here because it's required by all carriers.
		/// </summary>
		ClaimAckEmbedded_11e = 8,

		/// <summary>
		/// ClaimEob_21 is not here because it's required by all carriers.
		/// </summary>
		ClaimEobEmbedded_21e = 16,

		ClaimReversal_02 = 32,
		ClaimReversalResponse_12 = 64,

		PredeterminationSinglePage_03 = 128,
		PredeterminationMultiPage_03 = 256,

		/// <summary>
		/// Predetermination Acknowledgment.</summary>
		PredeterminationAck_13 = 512,

		/// <summary>
		/// Predetermination Acknowledgement. Secondary transaction nested inside primary transaction.
		/// </summary>
		PredeterminationAckEmbedded_13e = 1024,

		RequestForOutstandingTrans_04 = 2048,

		OutstandingTransAck_14 = 4096,

		EmailTransaction_24 = 8192,

		RequestForSummaryReconciliation_05 = 16384,

		SummaryReconciliation_15 = 32768,

		RequestForPaymentReconciliation_06 = 65536,

		PaymentReconciliation_16 = 131072
	}

	public enum NoSendElectType
	{
		/// <summary>
		/// Sending electronically is allowed for this carrier.
		/// </summary>
		[Description("Send Claims Electronically")]
		SendElect,

		/// <summary>
		/// Do not send electronically for this carrier.
		/// </summary>
		[Description("Don't Send Claims Electronically")]
		NoSendElect,

		/// <summary>
		/// Do not send electronically for this carrier if the carrier is not the primary insurance for the patient.
		/// </summary>
		[Description("Don't Send Secondary Claims Electronically")]
		NoSendSecondaryElect,
	}

	[Flags]
	public enum TrustedEtransTypes
	{
		/// <summary>
		/// Default, no trusted types.
		/// </summary>
		None = 0,

		/// <summary>
		/// When used in bit-wise value enables the automated import of certain fields for 271s, otherwise disabled.
		/// </summary>
		RealTimeEligibility = 1
	}
}
