//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: v4.0.30319
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Imedisoft.Data;
using MySql.Data.MySqlClient;
using OpenDentBusiness;
using System;
using System.Collections;
using System.Collections.Generic;

namespace OpenDentBusiness.Crud
{
	public class AutoCodeCondCrud
	{
		public static AutoCodeCond FromReader(MySqlDataReader dataReader)
		{
			return new AutoCodeCond
			{
				AutoCodeCondNum = (long)dataReader["AutoCodeCondNum"],
				AutoCodeItemNum = (long)dataReader["AutoCodeItemNum"],
				Cond = (AutoCondition)Convert.ToInt32(dataReader["Cond"])
			};
		}

		/// <summary>
		/// Selects a single AutoCodeCond object from the database using the specified SQL command.
		/// </summary>
		public static AutoCodeCond SelectOne(string command)
			=> Database.SelectOne(command, FromReader);

		/// <summary>
		/// Selects a single <see cref="AutoCodeCond"/> object from the database using the specified SQL command.
		/// </summary>
		public static AutoCodeCond SelectOne(Int64 autoCodeCondNum)
			=> SelectOne("SELECT * FROM `AutoCodeCond` WHERE `AutoCodeCondNum` = " + autoCodeCondNum);

		/// <summary>
		/// Selects multiple <see cref="AutoCodeCond"/> objects from the database using the specified SQL command.
		/// </summary>
		public static IEnumerable<AutoCodeCond> SelectMany(string command)
			=> Database.SelectMany(command, FromReader);

		/// <summary>
		/// Inserts the specified <see cref="AutoCodeCond"/> into the database.
		/// </summary>
		public static long Insert(AutoCodeCond autoCodeCond)
			=> autoCodeCond.AutoCodeCondNum = Database.ExecuteInsert(
				"INSERT INTO `AutoCodeCond` " + 
				"(`AutoCodeItemNum`, `Cond`) " + 
				"VALUES (" + 
					"@AutoCodeItemNum, @Cond" + 
				")");

		/// <summary>
		/// Updates the specified <see cref="AutoCodeCond"/> in the database.
		/// </summary>
		public static void Update(AutoCodeCond autoCodeCond)
			=> Database.ExecuteNonQuery(
				"UPDATE `AutoCodeCond` SET " + 
					"`AutoCodeItemNum` = @AutoCodeItemNum, " + 
					"`Cond` = @Cond " + 
				"WHERE `AutoCodeCondNum` = @AutoCodeCondNum",
					new MySqlParameter("AutoCodeCondNum", autoCodeCond.AutoCodeCondNum),
					new MySqlParameter("AutoCodeItemNum", autoCodeCond.AutoCodeItemNum),
					new MySqlParameter("Cond", (int)autoCodeCond.Cond));

		/// <summary>
		/// Updates the specified <see cref="AutoCodeCond"/> in the database.
		/// </summary>
		public static void Update(AutoCodeCond autoCodeCondNew, AutoCodeCond autoCodeCondOld)
		{
			var updates = new List<string>();
			var parameters = new List<MySqlParameter>();

			if (autoCodeCondNew.AutoCodeItemNum != autoCodeCondOld.AutoCodeItemNum)
			{
				updates.Add("`AutoCodeItemNum` = @AutoCodeItemNum");
				parameters.Add(new MySqlParameter("AutoCodeItemNum", autoCodeCondNew.AutoCodeItemNum));
			}

			if (autoCodeCondNew.Cond != autoCodeCondOld.Cond)
			{
				updates.Add("`Cond` = @Cond");
				parameters.Add(new MySqlParameter("Cond", (int)autoCodeCondNew.Cond));
			}

			if (updates.Count == 0) return;

			parameters.Add(new MySqlParameter("AutoCodeCondNum", autoCodeCondNew.AutoCodeCondNum));

			Database.ExecuteNonQuery("UPDATE `AutoCodeCond` " + 
				"SET " + string.Join(", ", updates) + " " + 
				"WHERE `AutoCodeCondNum` = @AutoCodeCondNum",
					parameters.ToArray());
		}

		/// <summary>
		/// Deletes a single <see cref="AutoCodeCond"/> object from the database.
		/// </summary>
		public static void Delete(Int64 autoCodeCondNum)
			 => Database.ExecuteNonQuery("DELETE FROM `AutoCodeCond` WHERE `AutoCodeCondNum` = " + autoCodeCondNum);

		/// <summary>
		/// Deletes the specified <see cref="AutoCodeCond"/> object from the database.
		/// </summary>
		public static void Delete(AutoCodeCond autoCodeCond)
			=> Delete(autoCodeCond.AutoCodeCondNum);
	}
}
