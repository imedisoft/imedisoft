//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: v4.0.30319
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Imedisoft.Data;
using MySql.Data.MySqlClient;
using System;
using System.Collections;
using System.Collections.Generic;

namespace OpenDentBusiness.Crud
{
	public class AccountingAutoPayCrud
	{
		public static AccountingAutoPay FromReader(MySqlDataReader dataReader)
		{
			return new AccountingAutoPay
			{
				AccountingAutoPayNum = (long)dataReader["AccountingAutoPayNum"],
				PayType = (long)dataReader["PayType"],
				PickList = (string)dataReader["PickList"]
			};
		}

		/// <summary>
		/// Selects a single AccountingAutoPay object from the database using the specified SQL command.
		/// </summary>
		public static AccountingAutoPay SelectOne(string command)
			=> Database.SelectOne(command, FromReader);

		/// <summary>
		/// Selects a single <see cref="AccountingAutoPay"/> object from the database using the specified SQL command.
		/// </summary>
		public static AccountingAutoPay SelectOne(Int64 accountingAutoPayNum)
			=> SelectOne("SELECT * FROM `AccountingAutoPay` WHERE `AccountingAutoPayNum` = " + accountingAutoPayNum);

		/// <summary>
		/// Selects multiple <see cref="AccountingAutoPay"/> objects from the database using the specified SQL command.
		/// </summary>
		public static IEnumerable<AccountingAutoPay> SelectMany(string command)
			=> Database.SelectMany(command, FromReader);

		/// <summary>
		/// Inserts the specified <see cref="AccountingAutoPay"/> into the database.
		/// </summary>
		public static long Insert(AccountingAutoPay accountingAutoPay)
			=> accountingAutoPay.AccountingAutoPayNum = Database.ExecuteInsert(
				"INSERT INTO `AccountingAutoPay` " + 
				"(`PayType`, `PickList`) " + 
				"VALUES (" + 
					"@PayType, @PickList" + 
				")");

		/// <summary>
		/// Updates the specified <see cref="AccountingAutoPay"/> in the database.
		/// </summary>
		public static void Update(AccountingAutoPay accountingAutoPay)
			=> Database.ExecuteNonQuery(
				"UPDATE `AccountingAutoPay` SET " + 
					"`PayType` = @PayType, " + 
					"`PickList` = @PickList " + 
				"WHERE `AccountingAutoPayNum` = @AccountingAutoPayNum",
					new MySqlParameter("AccountingAutoPayNum", accountingAutoPay.AccountingAutoPayNum),
					new MySqlParameter("PayType", accountingAutoPay.PayType),
					new MySqlParameter("PickList", accountingAutoPay.PickList ?? ""));

		/// <summary>
		/// Updates the specified <see cref="AccountingAutoPay"/> in the database.
		/// </summary>
		public static void Update(AccountingAutoPay accountingAutoPayNew, AccountingAutoPay accountingAutoPayOld)
		{
			var updates = new List<string>();
			var parameters = new List<MySqlParameter>();

			if (accountingAutoPayNew.PayType != accountingAutoPayOld.PayType)
			{
				updates.Add("`PayType` = @PayType");
				parameters.Add(new MySqlParameter("PayType", accountingAutoPayNew.PayType));
			}

			if (accountingAutoPayNew.PickList != accountingAutoPayOld.PickList)
			{
				updates.Add("`PickList` = @PickList");
				parameters.Add(new MySqlParameter("PickList", accountingAutoPayNew.PickList ?? ""));
			}

			if (updates.Count == 0) return;

			parameters.Add(new MySqlParameter("AccountingAutoPayNum", accountingAutoPayNew.AccountingAutoPayNum));

			Database.ExecuteNonQuery("UPDATE `AccountingAutoPay` " + 
				"SET " + string.Join(", ", updates) + " " + 
				"WHERE `AccountingAutoPayNum` = @AccountingAutoPayNum",
					parameters.ToArray());
		}

		/// <summary>
		/// Deletes a single <see cref="AccountingAutoPay"/> object from the database.
		/// </summary>
		public static void Delete(Int64 accountingAutoPayNum)
			 => Database.ExecuteNonQuery("DELETE FROM `AccountingAutoPay` WHERE `AccountingAutoPayNum` = " + accountingAutoPayNum);

		/// <summary>
		/// Deletes the specified <see cref="AccountingAutoPay"/> object from the database.
		/// </summary>
		public static void Delete(AccountingAutoPay accountingAutoPay)
			=> Delete(accountingAutoPay.AccountingAutoPayNum);
	}
}
