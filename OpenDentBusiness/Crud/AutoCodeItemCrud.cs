//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: v4.0.30319
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Imedisoft.Data;
using MySql.Data.MySqlClient;
using System;
using System.Collections;
using System.Collections.Generic;

namespace OpenDentBusiness.Crud
{
	public class AutoCodeItemCrud
	{
		public static AutoCodeItem FromReader(MySqlDataReader dataReader)
		{
			return new AutoCodeItem
			{
				AutoCodeItemNum = (long)dataReader["AutoCodeItemNum"],
				AutoCodeNum = (long)dataReader["AutoCodeNum"],
				OldCode = (string)dataReader["OldCode"],
				CodeNum = (long)dataReader["CodeNum"]
			};
		}

		/// <summary>
		/// Selects a single AutoCodeItem object from the database using the specified SQL command.
		/// </summary>
		public static AutoCodeItem SelectOne(string command)
			=> Database.SelectOne(command, FromReader);

		/// <summary>
		/// Selects a single <see cref="AutoCodeItem"/> object from the database using the specified SQL command.
		/// </summary>
		public static AutoCodeItem SelectOne(Int64 autoCodeItemNum)
			=> SelectOne("SELECT * FROM `AutoCodeItem` WHERE `AutoCodeItemNum` = " + autoCodeItemNum);

		/// <summary>
		/// Selects multiple <see cref="AutoCodeItem"/> objects from the database using the specified SQL command.
		/// </summary>
		public static IEnumerable<AutoCodeItem> SelectMany(string command)
			=> Database.SelectMany(command, FromReader);

		/// <summary>
		/// Inserts the specified <see cref="AutoCodeItem"/> into the database.
		/// </summary>
		public static long Insert(AutoCodeItem autoCodeItem)
			=> autoCodeItem.AutoCodeItemNum = Database.ExecuteInsert(
				"INSERT INTO `AutoCodeItem` " + 
				"(`AutoCodeNum`, `OldCode`, `CodeNum`) " + 
				"VALUES (" + 
					"@AutoCodeNum, @OldCode, @CodeNum" + 
				")");

		/// <summary>
		/// Updates the specified <see cref="AutoCodeItem"/> in the database.
		/// </summary>
		public static void Update(AutoCodeItem autoCodeItem)
			=> Database.ExecuteNonQuery(
				"UPDATE `AutoCodeItem` SET " + 
					"`AutoCodeNum` = @AutoCodeNum, " + 
					"`OldCode` = @OldCode, " + 
					"`CodeNum` = @CodeNum " + 
				"WHERE `AutoCodeItemNum` = @AutoCodeItemNum",
					new MySqlParameter("AutoCodeItemNum", autoCodeItem.AutoCodeItemNum),
					new MySqlParameter("AutoCodeNum", autoCodeItem.AutoCodeNum),
					new MySqlParameter("OldCode", autoCodeItem.OldCode ?? ""),
					new MySqlParameter("CodeNum", autoCodeItem.CodeNum));

		/// <summary>
		/// Updates the specified <see cref="AutoCodeItem"/> in the database.
		/// </summary>
		public static void Update(AutoCodeItem autoCodeItemNew, AutoCodeItem autoCodeItemOld)
		{
			var updates = new List<string>();
			var parameters = new List<MySqlParameter>();

			if (autoCodeItemNew.AutoCodeNum != autoCodeItemOld.AutoCodeNum)
			{
				updates.Add("`AutoCodeNum` = @AutoCodeNum");
				parameters.Add(new MySqlParameter("AutoCodeNum", autoCodeItemNew.AutoCodeNum));
			}

			if (autoCodeItemNew.OldCode != autoCodeItemOld.OldCode)
			{
				updates.Add("`OldCode` = @OldCode");
				parameters.Add(new MySqlParameter("OldCode", autoCodeItemNew.OldCode ?? ""));
			}

			if (autoCodeItemNew.CodeNum != autoCodeItemOld.CodeNum)
			{
				updates.Add("`CodeNum` = @CodeNum");
				parameters.Add(new MySqlParameter("CodeNum", autoCodeItemNew.CodeNum));
			}

			if (updates.Count == 0) return;

			parameters.Add(new MySqlParameter("AutoCodeItemNum", autoCodeItemNew.AutoCodeItemNum));

			Database.ExecuteNonQuery("UPDATE `AutoCodeItem` " + 
				"SET " + string.Join(", ", updates) + " " + 
				"WHERE `AutoCodeItemNum` = @AutoCodeItemNum",
					parameters.ToArray());
		}

		/// <summary>
		/// Deletes a single <see cref="AutoCodeItem"/> object from the database.
		/// </summary>
		public static void Delete(Int64 autoCodeItemNum)
			 => Database.ExecuteNonQuery("DELETE FROM `AutoCodeItem` WHERE `AutoCodeItemNum` = " + autoCodeItemNum);

		/// <summary>
		/// Deletes the specified <see cref="AutoCodeItem"/> object from the database.
		/// </summary>
		public static void Delete(AutoCodeItem autoCodeItem)
			=> Delete(autoCodeItem.AutoCodeItemNum);
	}
}
