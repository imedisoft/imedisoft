//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: v4.0.30319
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Imedisoft.Data;
using MySql.Data.MySqlClient;
using OpenDentBusiness;
using System;
using System.Collections;
using System.Collections.Generic;

namespace OpenDentBusiness.Crud
{
	public class AlertCategoryLinkCrud
	{
		public static AlertCategoryLink FromReader(MySqlDataReader dataReader)
		{
			return new AlertCategoryLink
			{
				AlertCategoryLinkNum = (long)dataReader["AlertCategoryLinkNum"],
				AlertCategoryNum = (long)dataReader["AlertCategoryNum"],
				AlertType = (AlertType)Convert.ToInt32(dataReader["AlertType"])
			};
		}

		/// <summary>
		/// Selects a single AlertCategoryLink object from the database using the specified SQL command.
		/// </summary>
		public static AlertCategoryLink SelectOne(string command)
			=> Database.SelectOne(command, FromReader);

		/// <summary>
		/// Selects a single <see cref="AlertCategoryLink"/> object from the database using the specified SQL command.
		/// </summary>
		public static AlertCategoryLink SelectOne(Int64 alertCategoryLinkNum)
			=> SelectOne("SELECT * FROM `AlertCategoryLink` WHERE `AlertCategoryLinkNum` = " + alertCategoryLinkNum);

		/// <summary>
		/// Selects multiple <see cref="AlertCategoryLink"/> objects from the database using the specified SQL command.
		/// </summary>
		public static IEnumerable<AlertCategoryLink> SelectMany(string command)
			=> Database.SelectMany(command, FromReader);

		/// <summary>
		/// Inserts the specified <see cref="AlertCategoryLink"/> into the database.
		/// </summary>
		public static long Insert(AlertCategoryLink alertCategoryLink)
			=> alertCategoryLink.AlertCategoryLinkNum = Database.ExecuteInsert(
				"INSERT INTO `AlertCategoryLink` " + 
				"(`AlertCategoryNum`, `AlertType`) " + 
				"VALUES (" + 
					"@AlertCategoryNum, @AlertType" + 
				")");

		/// <summary>
		/// Updates the specified <see cref="AlertCategoryLink"/> in the database.
		/// </summary>
		public static void Update(AlertCategoryLink alertCategoryLink)
			=> Database.ExecuteNonQuery(
				"UPDATE `AlertCategoryLink` SET " + 
					"`AlertCategoryNum` = @AlertCategoryNum, " + 
					"`AlertType` = @AlertType " + 
				"WHERE `AlertCategoryLinkNum` = @AlertCategoryLinkNum",
					new MySqlParameter("AlertCategoryLinkNum", alertCategoryLink.AlertCategoryLinkNum),
					new MySqlParameter("AlertCategoryNum", alertCategoryLink.AlertCategoryNum),
					new MySqlParameter("AlertType", (int)alertCategoryLink.AlertType));

		/// <summary>
		/// Updates the specified <see cref="AlertCategoryLink"/> in the database.
		/// </summary>
		public static bool Update(AlertCategoryLink alertCategoryLinkNew, AlertCategoryLink alertCategoryLinkOld)
		{
			var updates = new List<string>();
			var parameters = new List<MySqlParameter>();

			if (alertCategoryLinkNew.AlertCategoryNum != alertCategoryLinkOld.AlertCategoryNum)
			{
				updates.Add("`AlertCategoryNum` = @AlertCategoryNum");
				parameters.Add(new MySqlParameter("AlertCategoryNum", alertCategoryLinkNew.AlertCategoryNum));
			}

			if (alertCategoryLinkNew.AlertType != alertCategoryLinkOld.AlertType)
			{
				updates.Add("`AlertType` = @AlertType");
				parameters.Add(new MySqlParameter("AlertType", (int)alertCategoryLinkNew.AlertType));
			}

			if (updates.Count == 0) return false;

			parameters.Add(new MySqlParameter("AlertCategoryLinkNum", alertCategoryLinkNew.AlertCategoryLinkNum));

			Database.ExecuteNonQuery("UPDATE `AlertCategoryLink` " + 
				"SET " + string.Join(", ", updates) + " " + 
				"WHERE `AlertCategoryLinkNum` = @AlertCategoryLinkNum",
					parameters.ToArray());

			return true;
		}

		/// <summary>
		/// Deletes a single <see cref="AlertCategoryLink"/> object from the database.
		/// </summary>
		public static void Delete(Int64 alertCategoryLinkNum)
			 => Database.ExecuteNonQuery("DELETE FROM `AlertCategoryLink` WHERE `AlertCategoryLinkNum` = " + alertCategoryLinkNum);

		/// <summary>
		/// Deletes the specified <see cref="AlertCategoryLink"/> object from the database.
		/// </summary>
		public static void Delete(AlertCategoryLink alertCategoryLink)
			=> Delete(alertCategoryLink.AlertCategoryLinkNum);
	}
}
