//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: v4.0.30319
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using MySql.Data.MySqlClient;
using OpenDentBusiness;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Imedisoft.Data
{
	public partial class Employees
	{
		public static Employee FromReader(MySqlDataReader dataReader)
		{
			return new Employee
			{
				Id = (long)dataReader["id"],
				LastName = (string)dataReader["last_name"],
				FirstName = (string)dataReader["first_name"],
				Initials = (string)dataReader["initials"],
				ClockStatus = (string)dataReader["clock_status"],
				PhoneExt = (int)dataReader["phone_ext"],
				PayrollId = (string)dataReader["payroll_id"],
				WirelessPhone = (string)dataReader["wireless_phone"],
				EmailWork = (string)dataReader["email_work"],
				EmailPersonal = (string)dataReader["email_personal"],
				IsFurloughed = (Convert.ToInt32(dataReader["is_furloughed"]) == 1),
				IsWorkingHome = (Convert.ToInt32(dataReader["is_working_home"]) == 1),
				IsHidden = (Convert.ToInt32(dataReader["is_hidden"]) == 1)
			};
		}

		/// <summary>
		/// Selects a single Employee object from the database using the specified SQL command.
		/// </summary>
		/// <param name="command">The SELECT command to execute.</param>
		/// <param name="parameters">The (optional) command parameters.</param>
		public static Employee SelectOne(string command, params MySqlParameter[] parameters)
			=> Database.SelectOne(command, FromReader, parameters);

		/// <summary>
		/// Selects the <see cref="Employee"/> object with the specified key from the database.
		/// </summary>
		/// <param name="id">The primary key of the <see cref="Employee"/> to select.</param>
		public static Employee SelectOne(long id)
			=> SelectOne("SELECT * FROM `employees` WHERE `id` = " + id);

		/// <summary>
		/// Selects multiple <see cref="Employee"/> objects from the database using the specified SQL command.
		/// </summary>
		/// <param name="command">The SELECT command to execute.</param>
		/// <param name="parameters">The (optional) command parameters.</param>
		public static IEnumerable<Employee> SelectMany(string command, params MySqlParameter[] parameters)
			=> Database.SelectMany(command, FromReader, parameters);

		/// <summary>
		/// Inserts the specified <see cref="Employee"/> into the database.
		/// </summary>
		/// <param name="employee">The <see cref="Employee"/> to insert into the database.</param>
		private static long ExecuteInsert(Employee employee)
			=> employee.Id = Database.ExecuteInsert(
				"INSERT INTO `employees` " +
				"(`last_name`, `first_name`, `initials`, `clock_status`, `phone_ext`, `payroll_id`, `wireless_phone`, `email_work`, `email_personal`, `is_furloughed`, `is_working_home`, `is_hidden`) " +
				"VALUES (" +
					"@last_name, @first_name, @initials, @clock_status, @phone_ext, @payroll_id, @wireless_phone, @email_work, @email_personal, @is_furloughed, @is_working_home, @is_hidden" +
				")",
					new MySqlParameter("last_name", employee.LastName ?? ""),
					new MySqlParameter("first_name", employee.FirstName ?? ""),
					new MySqlParameter("initials", employee.Initials ?? ""),
					new MySqlParameter("clock_status", employee.ClockStatus ?? ""),
					new MySqlParameter("phone_ext", employee.PhoneExt),
					new MySqlParameter("payroll_id", employee.PayrollId ?? ""),
					new MySqlParameter("wireless_phone", employee.WirelessPhone ?? ""),
					new MySqlParameter("email_work", employee.EmailWork ?? ""),
					new MySqlParameter("email_personal", employee.EmailPersonal ?? ""),
					new MySqlParameter("is_furloughed", (employee.IsFurloughed ? 1 : 0)),
					new MySqlParameter("is_working_home", (employee.IsWorkingHome ? 1 : 0)),
					new MySqlParameter("is_hidden", (employee.IsHidden ? 1 : 0)));

		/// <summary>
		/// Updates the specified <see cref="Employee"/> in the database.
		/// </summary>
		/// <param name="employee">The <see cref="Employee"/> to update.</param>
		private static void ExecuteUpdate(Employee employee)
			=> Database.ExecuteNonQuery(
				"UPDATE `employees` SET " +
					"`last_name` = @last_name, " +
					"`first_name` = @first_name, " +
					"`initials` = @initials, " +
					"`clock_status` = @clock_status, " +
					"`phone_ext` = @phone_ext, " +
					"`payroll_id` = @payroll_id, " +
					"`wireless_phone` = @wireless_phone, " +
					"`email_work` = @email_work, " +
					"`email_personal` = @email_personal, " +
					"`is_furloughed` = @is_furloughed, " +
					"`is_working_home` = @is_working_home, " +
					"`is_hidden` = @is_hidden " +
				"WHERE `id` = @id",
					new MySqlParameter("id", employee.Id),
					new MySqlParameter("last_name", employee.LastName ?? ""),
					new MySqlParameter("first_name", employee.FirstName ?? ""),
					new MySqlParameter("initials", employee.Initials ?? ""),
					new MySqlParameter("clock_status", employee.ClockStatus ?? ""),
					new MySqlParameter("phone_ext", employee.PhoneExt),
					new MySqlParameter("payroll_id", employee.PayrollId ?? ""),
					new MySqlParameter("wireless_phone", employee.WirelessPhone ?? ""),
					new MySqlParameter("email_work", employee.EmailWork ?? ""),
					new MySqlParameter("email_personal", employee.EmailPersonal ?? ""),
					new MySqlParameter("is_furloughed", (employee.IsFurloughed ? 1 : 0)),
					new MySqlParameter("is_working_home", (employee.IsWorkingHome ? 1 : 0)),
					new MySqlParameter("is_hidden", (employee.IsHidden ? 1 : 0)));

		/// <summary>
		/// Deletes a single <see cref="Employee"/> object from the database.
		/// </summary>
		/// <param name="id">The primary key of the <see cref="Employee"/> to delete.</param>
		private static void ExecuteDelete(long id)
			 => Database.ExecuteNonQuery("DELETE FROM `employees` WHERE `id` = " + id);

		/// <summary>
		/// Deletes the specified <see cref="Employee"/> object from the database.
		/// </summary>
		/// <param name="employee">The <see cref="Employee"/> to delete.</param>
		private static void ExecuteDelete(Employee employee)
			=> ExecuteDelete(employee.Id);
	}
}
