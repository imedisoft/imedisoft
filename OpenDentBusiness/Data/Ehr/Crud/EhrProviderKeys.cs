//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: v4.0.30319
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Imedisoft.Data.Models;
using MySql.Data.MySqlClient;
using System.Collections.Generic;

namespace Imedisoft.Data
{
    public partial class EhrProviderKeys
	{
		public static EhrProviderKey FromReader(MySqlDataReader dataReader)
		{
			return new EhrProviderKey
			{
				Id = (long)dataReader["id"],
				LastName = (string)dataReader["last_name"],
				FirstName = (string)dataReader["first_name"],
				Key = (string)dataReader["key"],
				Notes = (string)dataReader["notes"],
				Year = (int)dataReader["year"]
			};
		}

		/// <summary>
		/// Selects a single EhrProviderKey object from the database using the specified SQL command.
		/// </summary>
		/// <param name="command">The SELECT command to execute.</param>
		/// <param name="parameters">The (optional) command parameters.</param>
		public static EhrProviderKey SelectOne(string command, params MySqlParameter[] parameters)
			=> Database.SelectOne(command, FromReader, parameters);

		/// <summary>
		/// Selects the <see cref="EhrProviderKey"/> object with the specified key from the database.
		/// </summary>
		/// <param name="id">The primary key of the <see cref="EhrProviderKey"/> to select.</param>
		public static EhrProviderKey SelectOne(long id)
			=> SelectOne("SELECT * FROM `ehr_provider_keys` WHERE `id` = " + id);

		/// <summary>
		/// Selects multiple <see cref="EhrProviderKey"/> objects from the database using the specified SQL command.
		/// </summary>
		/// <param name="command">The SELECT command to execute.</param>
		/// <param name="parameters">The (optional) command parameters.</param>
		public static IEnumerable<EhrProviderKey> SelectMany(string command, params MySqlParameter[] parameters)
			=> Database.SelectMany(command, FromReader, parameters);

		/// <summary>
		/// Inserts the specified <see cref="EhrProviderKey"/> into the database.
		/// </summary>
		/// <param name="ehrProviderKey">The <see cref="EhrProviderKey"/> to insert into the database.</param>
		private static long ExecuteInsert(EhrProviderKey ehrProviderKey)
			=> ehrProviderKey.Id = Database.ExecuteInsert(
				"INSERT INTO `ehr_provider_keys` " +
				"(`last_name`, `first_name`, `key`, `notes`, `year`) " +
				"VALUES (" +
					"@last_name, @first_name, @key, @notes, @year" +
				")",
					new MySqlParameter("last_name", ehrProviderKey.LastName ?? ""),
					new MySqlParameter("first_name", ehrProviderKey.FirstName ?? ""),
					new MySqlParameter("key", ehrProviderKey.Key ?? ""),
					new MySqlParameter("notes", ehrProviderKey.Notes ?? ""),
					new MySqlParameter("year", ehrProviderKey.Year));

		/// <summary>
		/// Updates the specified <see cref="EhrProviderKey"/> in the database.
		/// </summary>
		/// <param name="ehrProviderKey">The <see cref="EhrProviderKey"/> to update.</param>
		private static void ExecuteUpdate(EhrProviderKey ehrProviderKey)
			=> Database.ExecuteNonQuery(
				"UPDATE `ehr_provider_keys` SET " +
					"`last_name` = @last_name, " +
					"`first_name` = @first_name, " +
					"`key` = @key, " +
					"`notes` = @notes, " +
					"`year` = @year " +
				"WHERE `id` = @id",
					new MySqlParameter("id", ehrProviderKey.Id),
					new MySqlParameter("last_name", ehrProviderKey.LastName ?? ""),
					new MySqlParameter("first_name", ehrProviderKey.FirstName ?? ""),
					new MySqlParameter("key", ehrProviderKey.Key ?? ""),
					new MySqlParameter("notes", ehrProviderKey.Notes ?? ""),
					new MySqlParameter("year", ehrProviderKey.Year));

		/// <summary>
		/// Deletes a single <see cref="EhrProviderKey"/> object from the database.
		/// </summary>
		/// <param name="id">The primary key of the <see cref="EhrProviderKey"/> to delete.</param>
		private static void ExecuteDelete(long id)
			 => Database.ExecuteNonQuery("DELETE FROM `ehr_provider_keys` WHERE `id` = " + id);

		/// <summary>
		/// Deletes the specified <see cref="EhrProviderKey"/> object from the database.
		/// </summary>
		/// <param name="ehrProviderKey">The <see cref="EhrProviderKey"/> to delete.</param>
		private static void ExecuteDelete(EhrProviderKey ehrProviderKey)
			=> ExecuteDelete(ehrProviderKey.Id);
	}
}
