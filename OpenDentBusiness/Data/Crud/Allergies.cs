//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: v4.0.30319
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Imedisoft.Data.Models;
using MySql.Data.MySqlClient;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Imedisoft.Data
{
	public partial class Allergies
	{
		public static Allergy FromReader(MySqlDataReader dataReader)
		{
			return new Allergy
			{
				Id = (long)dataReader["id"],
				AllergyDefId = (long)dataReader["allergy_def_id"],
				PatientId = (long)dataReader["patient_id"],
				Reaction = (string)dataReader["reaction"],
				ReactionSnomedCode = dataReader["reaction_snomed_code"] as string,
				AdverseReactionDate = dataReader["adverse_reaction_date"] as DateTime?,
				LastModifiedDate = (DateTime)dataReader["date_last_modified"],
				IsActive = (Convert.ToInt32(dataReader["is_active"]) == 1)
			};
		}

		/// <summary>
		/// Selects a single Allergy object from the database using the specified SQL command.
		/// </summary>
		/// <param name="command">The SELECT command to execute.</param>
		/// <param name="parameters">The (optional) command parameters.</param>
		public static Allergy SelectOne(string command, params MySqlParameter[] parameters)
			=> Database.SelectOne(command, FromReader, parameters);

		/// <summary>
		/// Selects the <see cref="Allergy"/> object with the specified key from the database.
		/// </summary>
		/// <param name="id">The primary key of the <see cref="Allergy"/> to select.</param>
		public static Allergy SelectOne(long id)
			=> SelectOne("SELECT * FROM `allergies` WHERE `id` = " + id);

		/// <summary>
		/// Selects multiple <see cref="Allergy"/> objects from the database using the specified SQL command.
		/// </summary>
		/// <param name="command">The SELECT command to execute.</param>
		/// <param name="parameters">The (optional) command parameters.</param>
		public static IEnumerable<Allergy> SelectMany(string command, params MySqlParameter[] parameters)
			=> Database.SelectMany(command, FromReader, parameters);

		/// <summary>
		/// Inserts the specified <see cref="Allergy"/> into the database.
		/// </summary>
		/// <param name="allergy">The <see cref="Allergy"/> to insert into the database.</param>
		private static long ExecuteInsert(Allergy allergy)
			=> allergy.Id = Database.ExecuteInsert(
				"INSERT INTO `allergies` " +
				"(`allergy_def_id`, `patient_id`, `reaction`, `reaction_snomed_code`, `adverse_reaction_date`, `is_active`) " +
				"VALUES (" +
					"@allergy_def_id, @patient_id, @reaction, @reaction_snomed_code, @adverse_reaction_date, @is_active" +
				")",
					new MySqlParameter("allergy_def_id", allergy.AllergyDefId),
					new MySqlParameter("patient_id", allergy.PatientId),
					new MySqlParameter("reaction", allergy.Reaction ?? ""),
					new MySqlParameter("reaction_snomed_code", (object)allergy.ReactionSnomedCode ?? DBNull.Value),
					new MySqlParameter("adverse_reaction_date", (allergy.AdverseReactionDate.HasValue ? (object)allergy.AdverseReactionDate.Value : DBNull.Value)),
					new MySqlParameter("date_last_modified", allergy.LastModifiedDate),
					new MySqlParameter("is_active", (allergy.IsActive ? 1 : 0)));

		/// <summary>
		/// Updates the specified <see cref="Allergy"/> in the database.
		/// </summary>
		/// <param name="allergy">The <see cref="Allergy"/> to update.</param>
		private static void ExecuteUpdate(Allergy allergy)
			=> Database.ExecuteNonQuery(
				"UPDATE `allergies` SET " +
					"`allergy_def_id` = @allergy_def_id, " +
					"`patient_id` = @patient_id, " +
					"`reaction` = @reaction, " +
					"`reaction_snomed_code` = @reaction_snomed_code, " +
					"`adverse_reaction_date` = @adverse_reaction_date, " +
					"`is_active` = @is_active " +
				"WHERE `id` = @id",
					new MySqlParameter("id", allergy.Id),
					new MySqlParameter("allergy_def_id", allergy.AllergyDefId),
					new MySqlParameter("patient_id", allergy.PatientId),
					new MySqlParameter("reaction", allergy.Reaction ?? ""),
					new MySqlParameter("reaction_snomed_code", (object)allergy.ReactionSnomedCode ?? DBNull.Value),
					new MySqlParameter("adverse_reaction_date", (allergy.AdverseReactionDate.HasValue ? (object)allergy.AdverseReactionDate.Value : DBNull.Value)),
					new MySqlParameter("date_last_modified", allergy.LastModifiedDate),
					new MySqlParameter("is_active", (allergy.IsActive ? 1 : 0)));

		/// <summary>
		/// Deletes a single <see cref="Allergy"/> object from the database.
		/// </summary>
		/// <param name="id">The primary key of the <see cref="Allergy"/> to delete.</param>
		private static void ExecuteDelete(long id)
			 => Database.ExecuteNonQuery("DELETE FROM `allergies` WHERE `id` = " + id);

		/// <summary>
		/// Deletes the specified <see cref="Allergy"/> object from the database.
		/// </summary>
		/// <param name="allergy">The <see cref="Allergy"/> to delete.</param>
		private static void ExecuteDelete(Allergy allergy)
			=> ExecuteDelete(allergy.Id);
	}
}
