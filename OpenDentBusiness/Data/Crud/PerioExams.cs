//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: v4.0.30319
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Imedisoft.Data.Models;
using MySql.Data.MySqlClient;
using System;
using System.Collections.Generic;

namespace Imedisoft.Data
{
    public partial class PerioExams
	{
		public static PerioExam FromReader(MySqlDataReader dataReader)
		{
			return new PerioExam
			{
				Id = (long)dataReader["id"],
				PatientId = (long)dataReader["patient_id"],
				ExamDate = (DateTime)dataReader["exam_date"],
				ProviderId = (long)dataReader["provider_id"],
				LastModifiedDate = (DateTime)dataReader["last_modified_date"]
			};
		}

		/// <summary>
		/// Selects a single PerioExam object from the database using the specified SQL command.
		/// </summary>
		/// <param name="command">The SELECT command to execute.</param>
		/// <param name="parameters">The (optional) command parameters.</param>
		public static PerioExam SelectOne(string command, params MySqlParameter[] parameters)
			=> Database.SelectOne(command, FromReader, parameters);

		/// <summary>
		/// Selects the <see cref="PerioExam"/> object with the specified key from the database.
		/// </summary>
		/// <param name="id">The primary key of the <see cref="PerioExam"/> to select.</param>
		public static PerioExam SelectOne(long id)
			=> SelectOne("SELECT * FROM `perio_exams` WHERE `id` = " + id);

		/// <summary>
		/// Selects multiple <see cref="PerioExam"/> objects from the database using the specified SQL command.
		/// </summary>
		/// <param name="command">The SELECT command to execute.</param>
		/// <param name="parameters">The (optional) command parameters.</param>
		public static IEnumerable<PerioExam> SelectMany(string command, params MySqlParameter[] parameters)
			=> Database.SelectMany(command, FromReader, parameters);

		/// <summary>
		/// Inserts the specified <see cref="PerioExam"/> into the database.
		/// </summary>
		/// <param name="perioExam">The <see cref="PerioExam"/> to insert into the database.</param>
		private static long ExecuteInsert(PerioExam perioExam)
			=> perioExam.Id = Database.ExecuteInsert(
				"INSERT INTO `perio_exams` " +
				"(`patient_id`, `exam_date`, `provider_id`) " +
				"VALUES (" +
					"@patient_id, @exam_date, @provider_id" +
				")",
					new MySqlParameter("patient_id", perioExam.PatientId),
					new MySqlParameter("exam_date", perioExam.ExamDate),
					new MySqlParameter("provider_id", perioExam.ProviderId),
					new MySqlParameter("last_modified_date", perioExam.LastModifiedDate));

		/// <summary>
		/// Updates the specified <see cref="PerioExam"/> in the database.
		/// </summary>
		/// <param name="perioExam">The <see cref="PerioExam"/> to update.</param>
		private static void ExecuteUpdate(PerioExam perioExam)
			=> Database.ExecuteNonQuery(
				"UPDATE `perio_exams` SET " +
					"`patient_id` = @patient_id, " +
					"`exam_date` = @exam_date, " +
					"`provider_id` = @provider_id " +
				"WHERE `id` = @id",
					new MySqlParameter("id", perioExam.Id),
					new MySqlParameter("patient_id", perioExam.PatientId),
					new MySqlParameter("exam_date", perioExam.ExamDate),
					new MySqlParameter("provider_id", perioExam.ProviderId),
					new MySqlParameter("last_modified_date", perioExam.LastModifiedDate));

		/// <summary>
		/// Deletes a single <see cref="PerioExam"/> object from the database.
		/// </summary>
		/// <param name="id">The primary key of the <see cref="PerioExam"/> to delete.</param>
		private static void ExecuteDelete(long id)
			 => Database.ExecuteNonQuery("DELETE FROM `perio_exams` WHERE `id` = " + id);

		/// <summary>
		/// Deletes the specified <see cref="PerioExam"/> object from the database.
		/// </summary>
		/// <param name="perioExam">The <see cref="PerioExam"/> to delete.</param>
		private static void ExecuteDelete(PerioExam perioExam)
			=> ExecuteDelete(perioExam.Id);
	}
}
