//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: v4.0.30319
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Imedisoft.Data;
using MySql.Data.MySqlClient;
using System;
using System.Collections;
using System.Collections.Generic;

namespace OpenDentBusiness
{
	public partial class AutoCodeItems
	{
		public static AutoCodeItem FromReader(MySqlDataReader dataReader)
		{
			return new AutoCodeItem
			{
				Id = (long)dataReader["id"],
				AutoCodeId = (long)dataReader["auto_code_id"],
				ProcedureCodeId = (long)dataReader["procedure_code_id"]
			};
		}

		/// <summary>
		/// Selects a single AutoCodeItem object from the database using the specified SQL command.
		/// </summary>
		public static AutoCodeItem SelectOne(string command, params MySqlParameter[] parameters)
			=> Database.SelectOne(command, FromReader, parameters);

		/// <summary>
		/// Selects the <see cref="AutoCodeItem"/> object with the specified key from the database.
		/// </summary>
		public static AutoCodeItem SelectOne(Int64 id)
			=> SelectOne("SELECT * FROM `auto_code_items` WHERE `id` = " + id);

		/// <summary>
		/// Selects multiple <see cref="AutoCodeItem"/> objects from the database using the specified SQL command.
		/// </summary>
		public static IEnumerable<AutoCodeItem> SelectMany(string command, params MySqlParameter[] parameters)
			=> Database.SelectMany(command, FromReader, parameters);

		/// <summary>
		/// Inserts the specified <see cref="AutoCodeItem"/> into the database.
		/// </summary>
		public static long Insert(AutoCodeItem autoCodeItem)
			=> autoCodeItem.Id = Database.ExecuteInsert(
				"INSERT INTO `auto_code_items` " +
				"(`auto_code_id`, `procedure_code_id`) " +
				"VALUES (" +
					"@auto_code_id, @procedure_code_id" +
				")");

		/// <summary>
		/// Updates the specified <see cref="AutoCodeItem"/> in the database.
		/// </summary>
		public static void Update(AutoCodeItem autoCodeItem)
			=> Database.ExecuteNonQuery(
				"UPDATE `auto_code_items` SET " +
					"`auto_code_id` = @auto_code_id, " +
					"`procedure_code_id` = @procedure_code_id " +
				"WHERE `id` = @id",
					new MySqlParameter("id", autoCodeItem.Id),
					new MySqlParameter("auto_code_id", autoCodeItem.AutoCodeId),
					new MySqlParameter("procedure_code_id", autoCodeItem.ProcedureCodeId));

		/// <summary>
		/// Updates the specified <see cref="AutoCodeItem"/> in the database.
		/// </summary>
		public static bool Update(AutoCodeItem auto_code_itemsNew, AutoCodeItem auto_code_itemsOld)
		{
			var updates = new List<string>();
			var parameters = new List<MySqlParameter>();

			if (auto_code_itemsNew.AutoCodeId != auto_code_itemsOld.AutoCodeId)
			{
				updates.Add("`auto_code_id` = @auto_code_id");
				parameters.Add(new MySqlParameter("auto_code_id", auto_code_itemsNew.AutoCodeId));
			}

			if (auto_code_itemsNew.ProcedureCodeId != auto_code_itemsOld.ProcedureCodeId)
			{
				updates.Add("`procedure_code_id` = @procedure_code_id");
				parameters.Add(new MySqlParameter("procedure_code_id", auto_code_itemsNew.ProcedureCodeId));
			}

			if (updates.Count == 0) return false;

			parameters.Add(new MySqlParameter("id", auto_code_itemsNew.Id));

			Database.ExecuteNonQuery("UPDATE `auto_code_items` " +
				"SET " + string.Join(", ", updates) + " " +
				"WHERE `id` = @id",
					parameters.ToArray());

			return true;
		}

		/// <summary>
		/// Deletes a single <see cref="AutoCodeItem"/> object from the database.
		/// </summary>
		public static void Delete(Int64 id)
			 => Database.ExecuteNonQuery("DELETE FROM `auto_code_items` WHERE `id` = " + id);

		/// <summary>
		/// Deletes the specified <see cref="AutoCodeItem"/> object from the database.
		/// </summary>
		public static void Delete(AutoCodeItem autoCodeItem)
			=> Delete(autoCodeItem.Id);
	}
}
