//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: v4.0.30319
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Imedisoft.Data.Models;
using MySql.Data.MySqlClient;
using System;
using System.Collections.Generic;

namespace Imedisoft.Data
{
	public partial class EhrAmendments
	{
		public static EhrAmendment FromReader(MySqlDataReader dataReader)
		{
			return new EhrAmendment
			{
				Id = (long)dataReader["id"],
				PatientId = (long)dataReader["patient_id"],
				IsAccepted = (dataReader["is_accepted"] == DBNull.Value ? null : (bool?)(Convert.ToInt32(dataReader["is_accepted"]) == 1)),
				Description = (string)dataReader["description"],
				Source = (EhrAmendmentSource)Convert.ToInt32(dataReader["source"]),
				SourceName = (string)dataReader["source_name"],
				FileName = (string)dataReader["file_name"],
				RequestedOn = dataReader["requested_on"] as DateTime?,
				AcceptedDeniedOn = dataReader["accepted_denied_on"] as DateTime?,
				AppendedOn = dataReader["appended_on"] as DateTime?
			};
		}

		/// <summary>
		/// Selects a single EhrAmendment object from the database using the specified SQL command.
		/// </summary>
		/// <param name="command">The SELECT command to execute.</param>
		/// <param name="parameters">The (optional) command parameters.</param>
		public static EhrAmendment SelectOne(string command, params MySqlParameter[] parameters)
			=> Database.SelectOne(command, FromReader, parameters);

		/// <summary>
		/// Selects the <see cref="EhrAmendment"/> object with the specified key from the database.
		/// </summary>
		/// <param name="id">The primary key of the <see cref="EhrAmendment"/> to select.</param>
		public static EhrAmendment SelectOne(long id)
			=> SelectOne("SELECT * FROM `ehr_amendments` WHERE `id` = " + id);

		/// <summary>
		/// Selects multiple <see cref="EhrAmendment"/> objects from the database using the specified SQL command.
		/// </summary>
		/// <param name="command">The SELECT command to execute.</param>
		/// <param name="parameters">The (optional) command parameters.</param>
		public static IEnumerable<EhrAmendment> SelectMany(string command, params MySqlParameter[] parameters)
			=> Database.SelectMany(command, FromReader, parameters);

		/// <summary>
		/// Inserts the specified <see cref="EhrAmendment"/> into the database.
		/// </summary>
		/// <param name="ehrAmendment">The <see cref="EhrAmendment"/> to insert into the database.</param>
		private static long ExecuteInsert(EhrAmendment ehrAmendment)
			=> ehrAmendment.Id = Database.ExecuteInsert(
				"INSERT INTO `ehr_amendments` " +
				"(`patient_id`, `is_accepted`, `description`, `source`, `source_name`, `file_name`, `requested_on`, `accepted_denied_on`, `appended_on`) " +
				"VALUES (" +
					"@patient_id, @is_accepted, @description, @source, @source_name, @file_name, @requested_on, @accepted_denied_on, @appended_on" +
				")",
					new MySqlParameter("patient_id", ehrAmendment.PatientId),
					new MySqlParameter("is_accepted", (ehrAmendment.IsAccepted.HasValue ? (object)ehrAmendment.IsAccepted.Value : DBNull.Value)),
					new MySqlParameter("description", ehrAmendment.Description ?? ""),
					new MySqlParameter("source", (int)ehrAmendment.Source),
					new MySqlParameter("source_name", ehrAmendment.SourceName ?? ""),
					new MySqlParameter("file_name", ehrAmendment.FileName ?? ""),
					new MySqlParameter("requested_on", (ehrAmendment.RequestedOn.HasValue ? (object)ehrAmendment.RequestedOn.Value : DBNull.Value)),
					new MySqlParameter("accepted_denied_on", (ehrAmendment.AcceptedDeniedOn.HasValue ? (object)ehrAmendment.AcceptedDeniedOn.Value : DBNull.Value)),
					new MySqlParameter("appended_on", (ehrAmendment.AppendedOn.HasValue ? (object)ehrAmendment.AppendedOn.Value : DBNull.Value)));

		/// <summary>
		/// Updates the specified <see cref="EhrAmendment"/> in the database.
		/// </summary>
		/// <param name="ehrAmendment">The <see cref="EhrAmendment"/> to update.</param>
		private static void ExecuteUpdate(EhrAmendment ehrAmendment)
			=> Database.ExecuteNonQuery(
				"UPDATE `ehr_amendments` SET " +
					"`patient_id` = @patient_id, " +
					"`is_accepted` = @is_accepted, " +
					"`description` = @description, " +
					"`source` = @source, " +
					"`source_name` = @source_name, " +
					"`file_name` = @file_name, " +
					"`requested_on` = @requested_on, " +
					"`accepted_denied_on` = @accepted_denied_on, " +
					"`appended_on` = @appended_on " +
				"WHERE `id` = @id",
					new MySqlParameter("id", ehrAmendment.Id),
					new MySqlParameter("patient_id", ehrAmendment.PatientId),
					new MySqlParameter("is_accepted", (ehrAmendment.IsAccepted.HasValue ? (object)ehrAmendment.IsAccepted.Value : DBNull.Value)),
					new MySqlParameter("description", ehrAmendment.Description ?? ""),
					new MySqlParameter("source", (int)ehrAmendment.Source),
					new MySqlParameter("source_name", ehrAmendment.SourceName ?? ""),
					new MySqlParameter("file_name", ehrAmendment.FileName ?? ""),
					new MySqlParameter("requested_on", (ehrAmendment.RequestedOn.HasValue ? (object)ehrAmendment.RequestedOn.Value : DBNull.Value)),
					new MySqlParameter("accepted_denied_on", (ehrAmendment.AcceptedDeniedOn.HasValue ? (object)ehrAmendment.AcceptedDeniedOn.Value : DBNull.Value)),
					new MySqlParameter("appended_on", (ehrAmendment.AppendedOn.HasValue ? (object)ehrAmendment.AppendedOn.Value : DBNull.Value)));

		/// <summary>
		/// Deletes a single <see cref="EhrAmendment"/> object from the database.
		/// </summary>
		/// <param name="id">The primary key of the <see cref="EhrAmendment"/> to delete.</param>
		private static void ExecuteDelete(long id)
			 => Database.ExecuteNonQuery("DELETE FROM `ehr_amendments` WHERE `id` = " + id);

		/// <summary>
		/// Deletes the specified <see cref="EhrAmendment"/> object from the database.
		/// </summary>
		/// <param name="ehrAmendment">The <see cref="EhrAmendment"/> to delete.</param>
		private static void ExecuteDelete(EhrAmendment ehrAmendment)
			=> ExecuteDelete(ehrAmendment.Id);
	}
}
