//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: v4.0.30319
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Imedisoft.Data.Models;
using MySql.Data.MySqlClient;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Imedisoft.Data
{
	public partial class Computers
	{
		public static Computer FromReader(MySqlDataReader dataReader)
		{
			return new Computer
			{
				Id = (long)dataReader["id"],
				MachineName = (string)dataReader["machine_name"],
				LastHeartbeat = (DateTime)dataReader["last_heartbeat"]
			};
		}

		/// <summary>
		/// Selects a single Computer object from the database using the specified SQL command.
		/// </summary>
		/// <param name="command">The SELECT command to execute.</param>
		/// <param name="parameters">The (optional) command parameters.</param>
		public static Computer SelectOne(string command, params MySqlParameter[] parameters)
			=> Database.SelectOne(command, FromReader, parameters);

		/// <summary>
		/// Selects the <see cref="Computer"/> object with the specified key from the database.
		/// </summary>
		/// <param name="id">The primary key of the <see cref="Computer"/> to select.</param>
		public static Computer SelectOne(long id)
			=> SelectOne("SELECT * FROM `computers` WHERE `id` = " + id);

		/// <summary>
		/// Selects multiple <see cref="Computer"/> objects from the database using the specified SQL command.
		/// </summary>
		/// <param name="command">The SELECT command to execute.</param>
		/// <param name="parameters">The (optional) command parameters.</param>
		public static IEnumerable<Computer> SelectMany(string command, params MySqlParameter[] parameters)
			=> Database.SelectMany(command, FromReader, parameters);

		/// <summary>
		/// Inserts the specified <see cref="Computer"/> into the database.
		/// </summary>
		/// <param name="computer">The <see cref="Computer"/> to insert into the database.</param>
		private static long ExecuteInsert(Computer computer)
			=> computer.Id = Database.ExecuteInsert(
				"INSERT INTO `computers` " +
				"(`machine_name`, `last_heartbeat`) " +
				"VALUES (" +
					"@machine_name, @last_heartbeat" +
				")");

		/// <summary>
		/// Updates the specified <see cref="Computer"/> in the database.
		/// </summary>
		/// <param name="computer">The <see cref="Computer"/> to update.</param>
		private static void ExecuteUpdate(Computer computer)
			=> Database.ExecuteNonQuery(
				"UPDATE `computers` SET " +
					"`machine_name` = @machine_name, " +
					"`last_heartbeat` = @last_heartbeat " +
				"WHERE `id` = @id",
					new MySqlParameter("id", computer.Id),
					new MySqlParameter("machine_name", computer.MachineName ?? ""),
					new MySqlParameter("last_heartbeat", computer.LastHeartbeat));

		/// <summary>
		/// Deletes a single <see cref="Computer"/> object from the database.
		/// </summary>
		/// <param name="id">The primary key of the <see cref="Computer"/> to delete.</param>
		private static void ExecuteDelete(long id)
			 => Database.ExecuteNonQuery("DELETE FROM `computers` WHERE `id` = " + id);

		/// <summary>
		/// Deletes the specified <see cref="Computer"/> object from the database.
		/// </summary>
		/// <param name="computer">The <see cref="Computer"/> to delete.</param>
		private static void ExecuteDelete(Computer computer)
			=> ExecuteDelete(computer.Id);
	}
}
