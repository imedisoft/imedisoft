//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: v4.0.30319
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Imedisoft.Data.Models;
using MySql.Data.MySqlClient;
using System.Collections.Generic;

namespace Imedisoft.Data
{
    public partial class AccountingAutoPays
	{
		public static AccountingAutoPay FromReader(MySqlDataReader dataReader)
		{
			return new AccountingAutoPay
			{
				Id = (long)dataReader["id"],
				PayType = (long)dataReader["pay_type"],
				PickList = (string)dataReader["pick_list"]
			};
		}

		/// <summary>
		/// Selects a single AccountingAutoPay object from the database using the specified SQL command.
		/// </summary>
		/// <param name="command">The SELECT command to execute.</param>
		/// <param name="parameters">The (optional) command parameters.</param>
		public static AccountingAutoPay SelectOne(string command, params MySqlParameter[] parameters)
			=> Database.SelectOne(command, FromReader, parameters);

		/// <summary>
		/// Selects the <see cref="AccountingAutoPay"/> object with the specified key from the database.
		/// </summary>
		/// <param name="id">The primary key of the <see cref="AccountingAutoPay"/> to select.</param>
		public static AccountingAutoPay SelectOne(long id)
			=> SelectOne("SELECT * FROM `accounting_auto_pays` WHERE `id` = " + id);

		/// <summary>
		/// Selects multiple <see cref="AccountingAutoPay"/> objects from the database using the specified SQL command.
		/// </summary>
		/// <param name="command">The SELECT command to execute.</param>
		/// <param name="parameters">The (optional) command parameters.</param>
		public static IEnumerable<AccountingAutoPay> SelectMany(string command, params MySqlParameter[] parameters)
			=> Database.SelectMany(command, FromReader, parameters);

		/// <summary>
		/// Inserts the specified <see cref="AccountingAutoPay"/> into the database.
		/// </summary>
		/// <param name="accountingAutoPay">The <see cref="AccountingAutoPay"/> to insert into the database.</param>
		private static long ExecuteInsert(AccountingAutoPay accountingAutoPay)
			=> accountingAutoPay.Id = Database.ExecuteInsert(
				"INSERT INTO `accounting_auto_pays` " +
				"(`pay_type`, `pick_list`) " +
				"VALUES (" +
					"@pay_type, @pick_list" +
				")",
					new MySqlParameter("pay_type", accountingAutoPay.PayType),
					new MySqlParameter("pick_list", accountingAutoPay.PickList ?? ""));

		/// <summary>
		/// Updates the specified <see cref="AccountingAutoPay"/> in the database.
		/// </summary>
		/// <param name="accountingAutoPay">The <see cref="AccountingAutoPay"/> to update.</param>
		private static void ExecuteUpdate(AccountingAutoPay accountingAutoPay)
			=> Database.ExecuteNonQuery(
				"UPDATE `accounting_auto_pays` SET " +
					"`pay_type` = @pay_type, " +
					"`pick_list` = @pick_list " +
				"WHERE `id` = @id",
					new MySqlParameter("id", accountingAutoPay.Id),
					new MySqlParameter("pay_type", accountingAutoPay.PayType),
					new MySqlParameter("pick_list", accountingAutoPay.PickList ?? ""));

		/// <summary>
		/// Deletes a single <see cref="AccountingAutoPay"/> object from the database.
		/// </summary>
		/// <param name="id">The primary key of the <see cref="AccountingAutoPay"/> to delete.</param>
		private static void ExecuteDelete(long id)
			 => Database.ExecuteNonQuery("DELETE FROM `accounting_auto_pays` WHERE `id` = " + id);

		/// <summary>
		/// Deletes the specified <see cref="AccountingAutoPay"/> object from the database.
		/// </summary>
		/// <param name="accountingAutoPay">The <see cref="AccountingAutoPay"/> to delete.</param>
		private static void ExecuteDelete(AccountingAutoPay accountingAutoPay)
			=> ExecuteDelete(accountingAutoPay.Id);
	}
}
