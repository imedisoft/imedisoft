//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: v4.0.30319
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Imedisoft.Data.Models;
using MySql.Data.MySqlClient;
using System;
using System.Collections.Generic;

namespace Imedisoft.Data
{
	public partial class UpdateHistories
	{
		public static UpdateHistory FromReader(MySqlDataReader dataReader)
		{
			return new UpdateHistory
			{
				Id = (long)dataReader["id"],
				InstalledOn = (DateTime)dataReader["installed_on"],
				Version = (string)dataReader["version"]
			};
		}

		/// <summary>
		/// Selects a single UpdateHistory object from the database using the specified SQL command.
		/// </summary>
		/// <param name="command">The SELECT command to execute.</param>
		/// <param name="parameters">The (optional) command parameters.</param>
		public static UpdateHistory SelectOne(string command, params MySqlParameter[] parameters)
			=> Database.SelectOne(command, FromReader, parameters);

		/// <summary>
		/// Selects the <see cref="UpdateHistory"/> object with the specified key from the database.
		/// </summary>
		/// <param name="id">The primary key of the <see cref="UpdateHistory"/> to select.</param>
		public static UpdateHistory SelectOne(long id)
			=> SelectOne("SELECT * FROM `update_histories` WHERE `id` = " + id);

		/// <summary>
		/// Selects multiple <see cref="UpdateHistory"/> objects from the database using the specified SQL command.
		/// </summary>
		/// <param name="command">The SELECT command to execute.</param>
		/// <param name="parameters">The (optional) command parameters.</param>
		public static IEnumerable<UpdateHistory> SelectMany(string command, params MySqlParameter[] parameters)
			=> Database.SelectMany(command, FromReader, parameters);

		/// <summary>
		/// Inserts the specified <see cref="UpdateHistory"/> into the database.
		/// </summary>
		/// <param name="updateHistory">The <see cref="UpdateHistory"/> to insert into the database.</param>
		private static long ExecuteInsert(UpdateHistory updateHistory)
			=> updateHistory.Id = Database.ExecuteInsert(
				"INSERT INTO `update_histories` " +
				"(`installed_on`, `version`) " +
				"VALUES (" +
					"@installed_on, @version" +
				")",
					new MySqlParameter("installed_on", updateHistory.InstalledOn),
					new MySqlParameter("version", updateHistory.Version ?? ""));

		/// <summary>
		/// Updates the specified <see cref="UpdateHistory"/> in the database.
		/// </summary>
		/// <param name="updateHistory">The <see cref="UpdateHistory"/> to update.</param>
		private static void ExecuteUpdate(UpdateHistory updateHistory)
			=> Database.ExecuteNonQuery(
				"UPDATE `update_histories` SET " +
					"`installed_on` = @installed_on, " +
					"`version` = @version " +
				"WHERE `id` = @id",
					new MySqlParameter("id", updateHistory.Id),
					new MySqlParameter("installed_on", updateHistory.InstalledOn),
					new MySqlParameter("version", updateHistory.Version ?? ""));

		/// <summary>
		/// Deletes a single <see cref="UpdateHistory"/> object from the database.
		/// </summary>
		/// <param name="id">The primary key of the <see cref="UpdateHistory"/> to delete.</param>
		private static void ExecuteDelete(long id)
			 => Database.ExecuteNonQuery("DELETE FROM `update_histories` WHERE `id` = " + id);

		/// <summary>
		/// Deletes the specified <see cref="UpdateHistory"/> object from the database.
		/// </summary>
		/// <param name="updateHistory">The <see cref="UpdateHistory"/> to delete.</param>
		private static void ExecuteDelete(UpdateHistory updateHistory)
			=> ExecuteDelete(updateHistory.Id);
	}
}
