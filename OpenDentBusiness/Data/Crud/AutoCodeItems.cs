//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: v4.0.30319
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Imedisoft.Data.Models;
using MySql.Data.MySqlClient;
using System.Collections.Generic;

namespace Imedisoft.Data
{
    public partial class AutoCodeItems
	{
		public static AutoCodeItem FromReader(MySqlDataReader dataReader)
		{
			return new AutoCodeItem
			{
				Id = (long)dataReader["id"],
				AutoCodeId = (long)dataReader["auto_code_id"],
				ProcedureCodeId = (long)dataReader["procedure_code_id"]
			};
		}

		/// <summary>
		/// Selects a single AutoCodeItem object from the database using the specified SQL command.
		/// </summary>
		/// <param name="command">The SELECT command to execute.</param>
		/// <param name="parameters">The (optional) command parameters.</param>
		public static AutoCodeItem SelectOne(string command, params MySqlParameter[] parameters)
			=> Database.SelectOne(command, FromReader, parameters);

		/// <summary>
		/// Selects the <see cref="AutoCodeItem"/> object with the specified key from the database.
		/// </summary>
		/// <param name="id">The primary key of the <see cref="AutoCodeItem"/> to select.</param>
		public static AutoCodeItem SelectOne(long id)
			=> SelectOne("SELECT * FROM `auto_code_items` WHERE `id` = " + id);

		/// <summary>
		/// Selects multiple <see cref="AutoCodeItem"/> objects from the database using the specified SQL command.
		/// </summary>
		/// <param name="command">The SELECT command to execute.</param>
		/// <param name="parameters">The (optional) command parameters.</param>
		public static IEnumerable<AutoCodeItem> SelectMany(string command, params MySqlParameter[] parameters)
			=> Database.SelectMany(command, FromReader, parameters);

		/// <summary>
		/// Inserts the specified <see cref="AutoCodeItem"/> into the database.
		/// </summary>
		/// <param name="autoCodeItem">The <see cref="AutoCodeItem"/> to insert into the database.</param>
		private static long ExecuteInsert(AutoCodeItem autoCodeItem)
			=> autoCodeItem.Id = Database.ExecuteInsert(
				"INSERT INTO `auto_code_items` " +
				"(`auto_code_id`, `procedure_code_id`) " +
				"VALUES (" +
					"@auto_code_id, @procedure_code_id" +
				")",
					new MySqlParameter("auto_code_id", autoCodeItem.AutoCodeId),
					new MySqlParameter("procedure_code_id", autoCodeItem.ProcedureCodeId));

		/// <summary>
		/// Updates the specified <see cref="AutoCodeItem"/> in the database.
		/// </summary>
		/// <param name="autoCodeItem">The <see cref="AutoCodeItem"/> to update.</param>
		private static void ExecuteUpdate(AutoCodeItem autoCodeItem)
			=> Database.ExecuteNonQuery(
				"UPDATE `auto_code_items` SET " +
					"`auto_code_id` = @auto_code_id, " +
					"`procedure_code_id` = @procedure_code_id " +
				"WHERE `id` = @id",
					new MySqlParameter("id", autoCodeItem.Id),
					new MySqlParameter("auto_code_id", autoCodeItem.AutoCodeId),
					new MySqlParameter("procedure_code_id", autoCodeItem.ProcedureCodeId));

		/// <summary>
		/// Deletes a single <see cref="AutoCodeItem"/> object from the database.
		/// </summary>
		/// <param name="id">The primary key of the <see cref="AutoCodeItem"/> to delete.</param>
		private static void ExecuteDelete(long id)
			 => Database.ExecuteNonQuery("DELETE FROM `auto_code_items` WHERE `id` = " + id);

		/// <summary>
		/// Deletes the specified <see cref="AutoCodeItem"/> object from the database.
		/// </summary>
		/// <param name="autoCodeItem">The <see cref="AutoCodeItem"/> to delete.</param>
		private static void ExecuteDelete(AutoCodeItem autoCodeItem)
			=> ExecuteDelete(autoCodeItem.Id);
	}
}
