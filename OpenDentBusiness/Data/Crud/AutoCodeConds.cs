//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: v4.0.30319
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Imedisoft.Data;
using MySql.Data.MySqlClient;
using OpenDentBusiness;
using System;
using System.Collections;
using System.Collections.Generic;

namespace OpenDentBusiness
{
	public partial class AutoCodeConds
	{
		public static AutoCodeCond FromReader(MySqlDataReader dataReader)
		{
			return new AutoCodeCond
			{
				Id = (long)dataReader["id"],
				AutoCodeItemId = (long)dataReader["auto_code_item_id"],
				Cond = (AutoCondition)Convert.ToInt32(dataReader["cond"])
			};
		}

		/// <summary>
		/// Selects a single AutoCodeCond object from the database using the specified SQL command.
		/// </summary>
		public static AutoCodeCond SelectOne(string command, params MySqlParameter[] parameters)
			=> Database.SelectOne(command, FromReader, parameters);

		/// <summary>
		/// Selects the <see cref="AutoCodeCond"/> object with the specified key from the database.
		/// </summary>
		public static AutoCodeCond SelectOne(Int64 id)
			=> SelectOne("SELECT * FROM `auto_code_conditions` WHERE `id` = " + id);

		/// <summary>
		/// Selects multiple <see cref="AutoCodeCond"/> objects from the database using the specified SQL command.
		/// </summary>
		public static IEnumerable<AutoCodeCond> SelectMany(string command, params MySqlParameter[] parameters)
			=> Database.SelectMany(command, FromReader, parameters);

		/// <summary>
		/// Inserts the specified <see cref="AutoCodeCond"/> into the database.
		/// </summary>
		public static long Insert(AutoCodeCond autoCodeCond)
			=> autoCodeCond.Id = Database.ExecuteInsert(
				"INSERT INTO `auto_code_conditions` " +
				"(`auto_code_item_id`, `cond`) " +
				"VALUES (" +
					"@auto_code_item_id, @cond" +
				")");

		/// <summary>
		/// Updates the specified <see cref="AutoCodeCond"/> in the database.
		/// </summary>
		public static void Update(AutoCodeCond autoCodeCond)
			=> Database.ExecuteNonQuery(
				"UPDATE `auto_code_conditions` SET " +
					"`auto_code_item_id` = @auto_code_item_id, " +
					"`cond` = @cond " +
				"WHERE `id` = @id",
					new MySqlParameter("id", autoCodeCond.Id),
					new MySqlParameter("auto_code_item_id", autoCodeCond.AutoCodeItemId),
					new MySqlParameter("cond", (int)autoCodeCond.Cond));

		/// <summary>
		/// Updates the specified <see cref="AutoCodeCond"/> in the database.
		/// </summary>
		public static bool Update(AutoCodeCond auto_code_conditionsNew, AutoCodeCond auto_code_conditionsOld)
		{
			var updates = new List<string>();
			var parameters = new List<MySqlParameter>();

			if (auto_code_conditionsNew.AutoCodeItemId != auto_code_conditionsOld.AutoCodeItemId)
			{
				updates.Add("`auto_code_item_id` = @auto_code_item_id");
				parameters.Add(new MySqlParameter("auto_code_item_id", auto_code_conditionsNew.AutoCodeItemId));
			}

			if (auto_code_conditionsNew.Cond != auto_code_conditionsOld.Cond)
			{
				updates.Add("`cond` = @cond");
				parameters.Add(new MySqlParameter("cond", (int)auto_code_conditionsNew.Cond));
			}

			if (updates.Count == 0) return false;

			parameters.Add(new MySqlParameter("id", auto_code_conditionsNew.Id));

			Database.ExecuteNonQuery("UPDATE `auto_code_conditions` " +
				"SET " + string.Join(", ", updates) + " " +
				"WHERE `id` = @id",
					parameters.ToArray());

			return true;
		}

		/// <summary>
		/// Deletes a single <see cref="AutoCodeCond"/> object from the database.
		/// </summary>
		public static void Delete(Int64 id)
			 => Database.ExecuteNonQuery("DELETE FROM `auto_code_conditions` WHERE `id` = " + id);

		/// <summary>
		/// Deletes the specified <see cref="AutoCodeCond"/> object from the database.
		/// </summary>
		public static void Delete(AutoCodeCond autoCodeCond)
			=> Delete(autoCodeCond.Id);
	}
}
