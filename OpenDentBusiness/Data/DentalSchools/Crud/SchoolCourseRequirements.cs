//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: v4.0.30319
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Imedisoft.Data.Models;
using MySql.Data.MySqlClient;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Imedisoft.Data
{
	public partial class SchoolCourseRequirements
	{
		public static SchoolCourseRequirement FromReader(MySqlDataReader dataReader)
		{
			return new SchoolCourseRequirement
			{
				Id = (long)dataReader["id"],
				Description = (string)dataReader["description"],
				SchoolCourseId = (long)dataReader["school_course_id"],
				SchoolClassId = (long)dataReader["school_class_id"]
			};
		}

		/// <summary>
		/// Selects a single SchoolCourseRequirement object from the database using the specified SQL command.
		/// </summary>
		/// <param name="command">The SELECT command to execute.</param>
		/// <param name="parameters">The (optional) command parameters.</param>
		public static SchoolCourseRequirement SelectOne(string command, params MySqlParameter[] parameters)
			=> Database.SelectOne(command, FromReader, parameters);

		/// <summary>
		/// Selects the <see cref="SchoolCourseRequirement"/> object with the specified key from the database.
		/// </summary>
		/// <param name="id">The primary key of the <see cref="SchoolCourseRequirement"/> to select.</param>
		public static SchoolCourseRequirement SelectOne(long id)
			=> SelectOne("SELECT * FROM `school_course_requirements` WHERE `id` = " + id);

		/// <summary>
		/// Selects multiple <see cref="SchoolCourseRequirement"/> objects from the database using the specified SQL command.
		/// </summary>
		/// <param name="command">The SELECT command to execute.</param>
		/// <param name="parameters">The (optional) command parameters.</param>
		public static IEnumerable<SchoolCourseRequirement> SelectMany(string command, params MySqlParameter[] parameters)
			=> Database.SelectMany(command, FromReader, parameters);

		/// <summary>
		/// Inserts the specified <see cref="SchoolCourseRequirement"/> into the database.
		/// </summary>
		/// <param name="schoolCourseRequirement">The <see cref="SchoolCourseRequirement"/> to insert into the database.</param>
		private static long ExecuteInsert(SchoolCourseRequirement schoolCourseRequirement)
			=> schoolCourseRequirement.Id = Database.ExecuteInsert(
				"INSERT INTO `school_course_requirements` " +
				"(`description`, `school_course_id`, `school_class_id`) " +
				"VALUES (" +
					"@description, @school_course_id, @school_class_id" +
				")",
					new MySqlParameter("description", schoolCourseRequirement.Description ?? ""),
					new MySqlParameter("school_course_id", schoolCourseRequirement.SchoolCourseId),
					new MySqlParameter("school_class_id", schoolCourseRequirement.SchoolClassId));

		/// <summary>
		/// Updates the specified <see cref="SchoolCourseRequirement"/> in the database.
		/// </summary>
		/// <param name="schoolCourseRequirement">The <see cref="SchoolCourseRequirement"/> to update.</param>
		private static void ExecuteUpdate(SchoolCourseRequirement schoolCourseRequirement)
			=> Database.ExecuteNonQuery(
				"UPDATE `school_course_requirements` SET " +
					"`description` = @description, " +
					"`school_course_id` = @school_course_id, " +
					"`school_class_id` = @school_class_id " +
				"WHERE `id` = @id",
					new MySqlParameter("id", schoolCourseRequirement.Id),
					new MySqlParameter("description", schoolCourseRequirement.Description ?? ""),
					new MySqlParameter("school_course_id", schoolCourseRequirement.SchoolCourseId),
					new MySqlParameter("school_class_id", schoolCourseRequirement.SchoolClassId));

		/// <summary>
		/// Deletes a single <see cref="SchoolCourseRequirement"/> object from the database.
		/// </summary>
		/// <param name="id">The primary key of the <see cref="SchoolCourseRequirement"/> to delete.</param>
		private static void ExecuteDelete(long id)
			 => Database.ExecuteNonQuery("DELETE FROM `school_course_requirements` WHERE `id` = " + id);

		/// <summary>
		/// Deletes the specified <see cref="SchoolCourseRequirement"/> object from the database.
		/// </summary>
		/// <param name="schoolCourseRequirement">The <see cref="SchoolCourseRequirement"/> to delete.</param>
		private static void ExecuteDelete(SchoolCourseRequirement schoolCourseRequirement)
			=> ExecuteDelete(schoolCourseRequirement.Id);
	}
}
